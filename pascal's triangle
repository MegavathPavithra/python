Pascal Triange:
class Solution:
    def generate(self, numRows: int) ->List[List[int]]:
        a=[[]]*numRows
        for i in range(numRows):
            a[i]=[1]*(i+1)
            for j in range(1,i//2+1):
                a[i][i-j]=a[i][j]=a[i-1][j-1]+a[i-1][j]
        return a

output:
Input: rowIndex = 5
[[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
-------------------------------------------------------------------------------------------------------------------------
integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.
In Pascal's triangle
class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        row = [1]
        for _ in range(rowIndex):
            row = [left + right for left, right in zip([0]+row, row+[0])]
        return row

output:
Input: rowIndex = 3
[1,3,3,1]
-----------------------------------------------------------------------------------------------------------------------------
